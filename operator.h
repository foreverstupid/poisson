#ifndef HPC_POISSON_OPERATOR_MODULE_H
#define HPC_POISSON_OPERATOR_MODULE_H

#include "definitions.h"
#include "matrix.h"

/*
 * Contains all information that defines the operator generated by the
 * equation.
 */
typedef struct Operator
{
    /* known functions from the equation */

    Matrix *A;   /* A[i, j] = k(x_i - 0.5*h_1, y_j) */
    Matrix *B;   /* B[i, j] = k(x_i, y_j - 0.5*h_2) */
    Matrix *Q;   
    Matrix *F;

    /* boundary conditions */

    Matrix *PhiL;
    Matrix *PhiR;
    Matrix *PhiB;
    Matrix *PhiT;

    BoundaryType left_type;
    BoundaryType right_type;
    BoundaryType bottom_type;
    BoundaryType top_type;

    /* grid steps */

    scalar_t h1;
    scalar_t h2;
} Operator;



/*
 * Represents the operator action over the given matrix: v = Au.
 * Note: u and v should have the same size.
 */
void apply(Matrix *v, const Operator *op, const Matrix *u);

#endif